{
	"connections": [
		{
			"from": "fill_iterate",
			"from_port": 0,
			"to": "iterate_buffer",
			"to_port": 1
		},
		{
			"from": "shape",
			"from_port": 0,
			"to": "gen_outputs",
			"to_port": 0
		},
		{
			"from": "iterate_buffer",
			"from_port": 0,
			"to": "shape",
			"to_port": 0
		},
		{
			"from": "buffer_2",
			"from_port": 0,
			"to": "fill_preprocess",
			"to_port": 0
		},
		{
			"from": "fill_preprocess",
			"from_port": 0,
			"to": "iterate_buffer",
			"to_port": 0
		},
		{
			"from": "iterate_buffer",
			"from_port": 1,
			"to": "fill_iterate",
			"to_port": 0
		},
		{
			"from": "gen_inputs",
			"from_port": 0,
			"to": "buffer_3",
			"to_port": 0
		},
		{
			"from": "buffer_3",
			"from_port": 0,
			"to": "buffer_2",
			"to_port": 0
		},
		{
			"from": "buffer_3",
			"from_port": 0,
			"to": "fill_iterate",
			"to_port": 1
		}
	],
	"label": "Fill from colors",
	"longdesc": "Fills areas defined by different colors in its input",
	"name": "fill_from_colors",
	"node_position": {
		"x": 0,
		"y": 0
	},
	"nodes": [
		{
			"name": "iterate_buffer",
			"node_position": {
				"x": -132.86264,
				"y": -341.841705
			},
			"parameters": {
				"filter": false,
				"iterations": 10,
				"mipmap": false,
				"size": 8
			},
			"seed": 29168,
			"seed_locked": true,
			"type": "iterate_buffer"
		},
		{
			"name": "gen_inputs",
			"node_position": {
				"x": -812.307068,
				"y": -366.662445
			},
			"parameters": {

			},
			"ports": [
				{
					"group_size": 0,
					"longdesc": "The input image whose colored areas must be filled",
					"name": "port0",
					"shortdesc": "Input",
					"type": "rgba"
				}
			],
			"seed": 58064,
			"seed_locked": false,
			"type": "ios"
		},
		{
			"name": "gen_outputs",
			"node_position": {
				"x": 398.267273,
				"y": -401.662445
			},
			"parameters": {

			},
			"ports": [
				{
					"group_size": 0,
					"longdesc": "Generates fill data, to be connected to a fill companion node",
					"name": "port0",
					"shortdesc": "Output",
					"type": "fill"
				}
			],
			"seed": -4244,
			"seed_locked": false,
			"type": "ios"
		},
		{
			"name": "gen_parameters",
			"node_position": {
				"x": -246.110138,
				"y": -583.509705
			},
			"parameters": {
				"param0": 8,
				"param1": 10
			},
			"seed": 52136,
			"seed_locked": false,
			"type": "remote",
			"widgets": [
				{
					"label": "",
					"linked_widgets": [
						{
							"node": "iterate_buffer",
							"widget": "size"
						},
						{
							"node": "fill_preprocess",
							"widget": "s"
						},
						{
							"node": "fill_iterate",
							"widget": "s"
						},
						{
							"node": "buffer_2",
							"widget": "size"
						}
					],
					"longdesc": "The resolution of the input image",
					"name": "param0",
					"shortdesc": "Size",
					"type": "linked_control"
				},
				{
					"label": "",
					"linked_widgets": [
						{
							"node": "iterate_buffer",
							"widget": "iterations"
						}
					],
					"longdesc": "The number of iterations of the algorithm. The optimal value depends a lot on the input image.",
					"name": "param1",
					"shortdesc": "Iterations",
					"type": "linked_control"
				}
			]
		},
		{
			"name": "fill_iterate",
			"node_position": {
				"x": -89.524506,
				"y": -203.609192
			},
			"parameters": {
				"s": 8
			},
			"seed": 11778,
			"seed_locked": false,
			"shader_model": {
				"code": "",
				"global": "",
				"inputs": [
					{
						"default": "vec4(0.0)",
						"function": true,
						"label": "",
						"name": "in",
						"type": "rgba"
					},
					{
						"default": "vec4(0.0)",
						"function": true,
						"label": "",
						"name": "colors",
						"type": "rgba"
					}
				],
				"instance": "vec4 $(name)_fill(vec2 uv) {\n\tvec4 ref_color = $colors(uv);\n\tfloat size = $s;\n\tint iterations = min(int(size), 1024);\n\tvec4 color = $in(fract(uv));\n\tif (color.z+color.w < 1.0/size) {\n\t\treturn vec4(0.0);\n\t}\n\tvec2 offsets[4] = { vec2(1.0, 1.0), vec2(-1.0, 1.0), vec2(-1.0, -1.0), vec2(1.0, -1.0) };\n\tvec2 mult_base = vec2(1.0, 0.0);\n\tfor (int o = 0; o < 4; ++o) {\n\t\tvec2 offset = offsets[o]/size;\n\t\tvec2 mult = mult_base;\n\t\tfor (int d = 0; d < 2; ++d) {\n\t\t\tvec2 uv2 = uv;\n\t\t\tint l = 0;\n\t\t\tfor (int i = 1; i < iterations; i += 1) {\n\t\t\t\tuv2 += offset*mult;\n\t\t\t\tvec4 color2 = $in(fract(uv2));\n\t\t\t\tif (ref_color != $colors(fract(uv2))) {\n\t\t\t\t\tif (l < 1) {\n\t\t\t\t\t\tmult = mult.yx;\n\t\t\t\t\t\tl += 1;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tl = 0;\n\t\t\t\tvec2 p1 = color.xy+floor(uv-color.xy);\n\t\t\t\tvec2 p2 = color2.xy+floor(uv2-color2.xy);\n\t\t\t\tvec2 p = min(p1, p2);\n\t\t\t\tvec2 s = max(p1+color.zw, p2+color2.zw)-p;\n\t\t\t\tcolor = mix(vec4(0.0, 0.0, 1.0, 1.0), vec4(fract(p), s), step(s.xyxy, vec4(1.0)));\n\t\t\t}\n\t\t\tmult = mult_base.yx;\n\t\t}\n\t}\n\treturn floor(color*size)/size;\n}\n",
				"name": "Fill iterate",
				"outputs": [
					{
						"rgba": "$(name)_fill($uv)",
						"type": "rgba"
					}
				],
				"parameters": [
					{
						"default": 9,
						"first": 6,
						"label": "",
						"last": 12,
						"name": "s",
						"type": "size"
					}
				]
			},
			"type": "shader"
		},
		{
			"name": "fill_preprocess",
			"node_position": {
				"x": -107.443481,
				"y": -429.202026
			},
			"parameters": {
				"s": 8
			},
			"seed": 24315,
			"seed_locked": false,
			"shader_model": {
				"code": "",
				"global": "",
				"inputs": [
					{
						"default": "vec4(0.0)",
						"label": "",
						"name": "trigger",
						"type": "rgba"
					}
				],
				"instance": "",
				"name": "Fill preprocess",
				"outputs": [
					{
						"rgba": "vec4(floor($uv*$s)/$s, vec2(1.0/$s))",
						"type": "rgba"
					}
				],
				"parameters": [
					{
						"default": 10,
						"first": 0,
						"label": "",
						"last": 12,
						"name": "s",
						"type": "size"
					}
				]
			},
			"type": "shader"
		},
		{
			"name": "shape",
			"node_position": {
				"x": 176.919922,
				"y": -400.122955
			},
			"parameters": {

			},
			"seed": 0,
			"seed_locked": false,
			"shader_model": {
				"code": "",
				"global": "float shape_circle(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = max(edge, 1.0e-8);\n    float distance = length(uv);\n    return clamp((1.0-distance/size)/edge, 0.0, 1.0);\n}\n\nfloat shape_polygon(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = max(edge, 1.0e-8);\n    float angle = atan(uv.x, uv.y)+3.14159265359;\n    float slice = 6.28318530718/sides;\n    return clamp((1.0-(cos(floor(0.5+angle/slice)*slice-angle)*length(uv))/size)/edge, 0.0, 1.0);\n}\n\nfloat shape_star(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = max(edge, 1.0e-8);\n    float angle = atan(uv.x, uv.y);\n    float slice = 6.28318530718/sides;\n    return clamp((1.0-(cos(floor(angle*sides/6.28318530718-0.5+2.0*step(fract(angle*sides/6.28318530718), 0.5))*slice-angle)*length(uv))/size)/edge, 0.0, 1.0);\n}\n\nfloat shape_curved_star(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = max(edge, 1.0e-8);\n    float angle = 2.0*(atan(uv.x, uv.y)+3.14159265359);\n    float slice = 6.28318530718/sides;\n    return clamp((1.0-cos(floor(0.5+0.5*angle/slice)*2.0*slice-angle)*length(uv)/size)/edge, 0.0, 1.0);\n}\n\nfloat shape_rays(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = 0.5*max(edge, 1.0e-8)*size;\n\tfloat slice = 6.28318530718/sides;\n    float angle = mod(atan(uv.x, uv.y)+3.14159265359, slice)/slice;\n    return clamp(min((size-angle)/edge, angle/edge), 0.0, 1.0);\n}\n\n",
				"inputs": [
					{
						"default": "1.0",
						"label": "",
						"name": "in",
						"type": "rgba"
					}
				],
				"instance": "",
				"name": "Fill Convert",
				"outputs": [
					{
						"fill": "$in($(uv))",
						"type": "fill"
					}
				],
				"parameters": [

				]
			},
			"type": "shader"
		},
		{
			"name": "buffer_2",
			"node_position": {
				"x": -408.065674,
				"y": -434.233154
			},
			"parameters": {
				"filter": false,
				"mipmap": false,
				"size": 8
			},
			"seed": 0,
			"seed_locked": false,
			"type": "buffer",
			"version": 2
		},
		{
			"name": "buffer_3",
			"node_position": {
				"x": -401.640808,
				"y": -310.542969
			},
			"parameters": {
				"filter": false,
				"mipmap": false,
				"size": 8
			},
			"seed": 0,
			"seed_locked": false,
			"type": "buffer",
			"version": 2
		}
	],
	"parameters": {
		"param0": 8,
		"param1": 10
	},
	"seed": 0,
	"seed_locked": false,
	"shortdesc": "Fill from colors",
	"type": "graph"
}