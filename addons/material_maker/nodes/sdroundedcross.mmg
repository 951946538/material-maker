{
	"name": "sdroundedcross",
	"node_position": {
		"x": 0,
		"y": 0
	},
	"parameters": {
		"cx": 0.0,
		"cy": 0.0,
		"h": 0.3,
		"w": 0.6
	},
	"seed": 0,
	"seed_locked": false,
	"shader_model": {
		"code": "",
		"global": "float sdRoundedCross( in vec2 p, in float h )\n{\n    float k = 0.5*(h+1.0/h); // k should be const at modeling time\n    p = abs(p);\n    return ( p.x<1.0 && p.y<p.x*(k-h)+h ) ? \n             k-sqrt(dot2(p-vec2(1,k)))  :\n           sqrt(min(dot2(p-vec2(0,h)),\n                    dot2(p-vec2(1,0))));\n}",
		"inputs": [

		],
		"instance": "",
		"longdesc": "A rounded cross described as a signed distance function",
		"name": "sdRoundedCross",
		"outputs": [
			{
				"longdesc": "The rounded cross as a signed distance function",
				"sdf2d": "sdRoundedCross(($uv - 0.5 - vec2($cx, $cy)) / $w, $h / $w) * $w",
				"shortdesc": "Output",
				"type": "sdf2d"
			}
		],
		"parameters": [
			{
				"control": "Rect1.y",
				"default": 0.3,
				"label": "Height",
				"longdesc": "Height of the rounded cross",
				"max": 1,
				"min": 0,
				"name": "h",
				"step": 0.01,
				"type": "float"
			},
			{
				"control": "Rect1.x",
				"default": 0.6,
				"label": "Width",
				"longdesc": "Width of the rounded cross",
				"max": 1,
				"min": 0,
				"name": "w",
				"step": 0.01,
				"type": "float"
			},
			{
				"control": "P1.x",
				"default": 0,
				"label": "Center X",
				"longdesc": "The position of the center on the X axis",
				"max": 0.5,
				"min": -0.5,
				"name": "cx",
				"shortdesc": "Center.x",
				"step": 0.01,
				"type": "float"
			},
			{
				"control": "P1.y",
				"default": 0,
				"label": "Center Y",
				"longdesc": "The position of the center on the Y axis",
				"max": 0.5,
				"min": -0.5,
				"name": "cy",
				"shortdesc": "Center.y",
				"step": 0.01,
				"type": "float"
			}
		],
		"shortdesc": "sdRoundedCross"
	},
	"type": "shader"
}