{
	"connections": [
		{
			"from": "iterate_buffer",
			"from_port": 1,
			"to": "fill_iterate",
			"to_port": 0
		},
		{
			"from": "fill_iterate",
			"from_port": 0,
			"to": "iterate_buffer",
			"to_port": 1
		},
		{
			"from": "gen_inputs",
			"from_port": 0,
			"to": "fill_preprocess",
			"to_port": 0
		},
		{
			"from": "fill_preprocess",
			"from_port": 0,
			"to": "iterate_buffer",
			"to_port": 0
		},
		{
			"from": "shape",
			"from_port": 0,
			"to": "gen_outputs",
			"to_port": 0
		},
		{
			"from": "dilate_pass_4",
			"from_port": 0,
			"to": "dilate_pass_3",
			"to_port": 0
		},
		{
			"from": "iterate_buffer",
			"from_port": 0,
			"to": "dilate_pass_3",
			"to_port": 1
		},
		{
			"from": "iterate_buffer",
			"from_port": 0,
			"to": "shader_1",
			"to_port": 0
		},
		{
			"from": "shader_1",
			"from_port": 0,
			"to": "dilate_pass_1",
			"to_port": 0
		},
		{
			"from": "dilate_pass_3",
			"from_port": 0,
			"to": "switch",
			"to_port": 1
		},
		{
			"from": "switch",
			"from_port": 0,
			"to": "shape",
			"to_port": 0
		},
		{
			"from": "iterate_buffer",
			"from_port": 0,
			"to": "switch",
			"to_port": 0
		},
		{
			"from": "dilate_pass_1",
			"from_port": 0,
			"to": "buffer",
			"to_port": 0
		},
		{
			"from": "buffer",
			"from_port": 0,
			"to": "dilate_pass_4",
			"to_port": 0
		}
	],
	"label": "Fill",
	"longdesc": "Fills areas defined by white outlines of its input",
	"name": "fill2",
	"node_position": {
		"x": 0,
		"y": 0
	},
	"nodes": [
		{
			"name": "iterate_buffer",
			"node_position": {
				"x": -134.86264,
				"y": -362.841705
			},
			"parameters": {
				"filter": false,
				"iterations": 10,
				"mipmap": false,
				"size": 8
			},
			"seed": 29168,
			"seed_locked": true,
			"type": "iterate_buffer"
		},
		{
			"name": "gen_inputs",
			"node_position": {
				"x": -542.307068,
				"y": -370.662445
			},
			"parameters": {

			},
			"ports": [
				{
					"group_size": 0,
					"longdesc": "The input image whose white outlines must be filled",
					"name": "port0",
					"shortdesc": "Input",
					"type": "f"
				}
			],
			"seed": 58064,
			"seed_locked": false,
			"type": "ios"
		},
		{
			"name": "gen_outputs",
			"node_position": {
				"x": 831.267273,
				"y": -415.662445
			},
			"parameters": {

			},
			"ports": [
				{
					"group_size": 0,
					"longdesc": "Generates fill data, to be connected to a fill companion node",
					"name": "port0",
					"shortdesc": "Output",
					"type": "fill"
				}
			],
			"seed": -4244,
			"seed_locked": false,
			"type": "ios"
		},
		{
			"name": "gen_parameters",
			"node_position": {
				"x": -246.110138,
				"y": -583.509705
			},
			"parameters": {
				"param0": 8,
				"param1": 10,
				"param2": 0
			},
			"seed": 52136,
			"seed_locked": false,
			"type": "remote",
			"widgets": [
				{
					"label": "",
					"linked_widgets": [
						{
							"node": "iterate_buffer",
							"widget": "size"
						},
						{
							"node": "fill_preprocess",
							"widget": "s"
						},
						{
							"node": "fill_iterate",
							"widget": "s"
						}
					],
					"longdesc": "The resolution of the inptu image",
					"name": "param0",
					"shortdesc": "Size",
					"type": "linked_control"
				},
				{
					"label": "",
					"linked_widgets": [
						{
							"node": "iterate_buffer",
							"widget": "iterations"
						}
					],
					"longdesc": "The number of iterations of the algorithm. The optimal value depends a lot on the input image.",
					"name": "param1",
					"shortdesc": "Iterations",
					"type": "linked_control"
				},
				{
					"configurations": {
						"False": [
							{
								"node": "switch",
								"value": 0,
								"widget": "source"
							}
						],
						"True": [
							{
								"node": "switch",
								"value": 1,
								"widget": "source"
							}
						]
					},
					"label": "Remove edges",
					"linked_widgets": [
						{
							"node": "switch",
							"widget": "source"
						}
					],
					"name": "param2",
					"type": "config_control"
				}
			]
		},
		{
			"name": "fill_iterate",
			"node_position": {
				"x": -91.524506,
				"y": -225.609192
			},
			"parameters": {
				"s": 8
			},
			"seed": 11778,
			"seed_locked": false,
			"shader_model": {
				"code": "",
				"global": "",
				"inputs": [
					{
						"default": "0.0",
						"function": true,
						"label": "",
						"name": "in",
						"type": "rgba"
					}
				],
				"instance": "vec4 $(name)_fill(vec2 uv) {\n\tfloat size = $s;\n\tint iterations = min(int(size), 1024);\n\tvec4 color = $in(fract(uv));\n\tif (color.z+color.w < 1.0/size) {\n\t\treturn vec4(0.0);\n\t}\n\tvec2 offsets[4] = { vec2(1.0, 1.0), vec2(-1.0, 1.0), vec2(-1.0, -1.0), vec2(1.0, -1.0) };\n\tvec2 mult_base = vec2(1.0, 0.0);\n\tfor (int o = 0; o < 4; ++o) {\n\t\tvec2 offset = offsets[o]/size;\n\t\tvec2 mult = mult_base;\n\t\tfor (int d = 0; d < 2; ++d) {\n\t\t\tvec2 uv2 = uv;\n\t\t\tint l = 0;\n\t\t\tfor (int i = 1; i < iterations; i += 1) {\n\t\t\t\tuv2 += offset*mult;\n\t\t\t\tvec4 color2 = $in(fract(uv2));\n\t\t\t\tif (color2.z+color2.w == 0.0) {\n\t\t\t\t\tif (l < 1) {\n\t\t\t\t\t\tmult = mult.yx;\n\t\t\t\t\t\tl += 1;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tl = 0;\n\t\t\t\tvec2 p1 = color.xy+floor(uv-color.xy);\n\t\t\t\tvec2 p2 = color2.xy+floor(uv2-color2.xy);\n\t\t\t\tvec2 p = min(p1, p2);\n\t\t\t\tvec2 s = max(p1+color.zw, p2+color2.zw)-p;\n\t\t\t\tcolor = mix(vec4(0.0, 0.0, 1.0, 1.0), vec4(fract(p), s), step(s.xyxy, vec4(1.0)));\n\t\t\t}\n\t\t\tmult = mult_base.yx;\n\t\t}\n\t}\n\treturn floor(color*size)/size;\n}\n",
				"name": "Fill iterate",
				"outputs": [
					{
						"rgba": "$(name)_fill($uv)",
						"type": "rgba"
					}
				],
				"parameters": [
					{
						"default": 9,
						"first": 6,
						"label": "",
						"last": 12,
						"name": "s",
						"type": "size"
					}
				]
			},
			"type": "shader"
		},
		{
			"name": "fill_preprocess",
			"node_position": {
				"x": -110.443481,
				"y": -427.202026
			},
			"parameters": {
				"s": 8
			},
			"seed": 24315,
			"seed_locked": false,
			"type": "fill_preprocess"
		},
		{
			"name": "shape",
			"node_position": {
				"x": 635.919922,
				"y": -415.122955
			},
			"parameters": {

			},
			"seed": 0,
			"seed_locked": false,
			"shader_model": {
				"code": "",
				"global": "float shape_circle(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = max(edge, 1.0e-8);\n    float distance = length(uv);\n    return clamp((1.0-distance/size)/edge, 0.0, 1.0);\n}\n\nfloat shape_polygon(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = max(edge, 1.0e-8);\n    float angle = atan(uv.x, uv.y)+3.14159265359;\n    float slice = 6.28318530718/sides;\n    return clamp((1.0-(cos(floor(0.5+angle/slice)*slice-angle)*length(uv))/size)/edge, 0.0, 1.0);\n}\n\nfloat shape_star(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = max(edge, 1.0e-8);\n    float angle = atan(uv.x, uv.y);\n    float slice = 6.28318530718/sides;\n    return clamp((1.0-(cos(floor(angle*sides/6.28318530718-0.5+2.0*step(fract(angle*sides/6.28318530718), 0.5))*slice-angle)*length(uv))/size)/edge, 0.0, 1.0);\n}\n\nfloat shape_curved_star(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = max(edge, 1.0e-8);\n    float angle = 2.0*(atan(uv.x, uv.y)+3.14159265359);\n    float slice = 6.28318530718/sides;\n    return clamp((1.0-cos(floor(0.5+0.5*angle/slice)*2.0*slice-angle)*length(uv)/size)/edge, 0.0, 1.0);\n}\n\nfloat shape_rays(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = 0.5*max(edge, 1.0e-8)*size;\n\tfloat slice = 6.28318530718/sides;\n    float angle = mod(atan(uv.x, uv.y)+3.14159265359, slice)/slice;\n    return clamp(min((size-angle)/edge, angle/edge), 0.0, 1.0);\n}\n\n",
				"inputs": [
					{
						"default": "1.0",
						"label": "",
						"name": "in",
						"type": "rgba"
					}
				],
				"instance": "",
				"name": "Fill Convert",
				"outputs": [
					{
						"fill": "$in($(uv))",
						"type": "fill"
					}
				],
				"parameters": [

				]
			},
			"type": "shader"
		},
		{
			"name": "dilate_pass_3",
			"node_position": {
				"x": 178.313049,
				"y": 71.671021
			},
			"parameters": {
				"amount": 1
			},
			"seed": 50311,
			"seed_locked": false,
			"shader_model": {
				"code": "",
				"global": "",
				"inputs": [
					{
						"default": "vec3(0.0)",
						"label": "",
						"name": "distance",
						"type": "rgb"
					},
					{
						"default": "vec4(1.0)",
						"label": "",
						"name": "source",
						"type": "rgba"
					}
				],
				"instance": "",
				"name": "Dilate pass 3",
				"outputs": [
					{
						"rgba": "$source($distance($uv).yz)*mix($distance($uv).x, 1.0, $amount)",
						"type": "rgba"
					}
				],
				"parameters": [
					{
						"control": "None",
						"default": 0,
						"label": "",
						"max": 1,
						"min": 0,
						"name": "amount",
						"step": 0.01,
						"type": "float"
					}
				]
			},
			"type": "shader"
		},
		{
			"name": "dilate_pass_4",
			"node_position": {
				"x": 177.322388,
				"y": -37.537262
			},
			"parameters": {
				"d": 1,
				"distance": 0,
				"s": 11
			},
			"seed": 50297,
			"seed_locked": false,
			"shader_model": {
				"code": "",
				"global": "float dilate_distance_euclidian(float x, float y, float d) {\n\treturn 1.0-sqrt((1.0-x)*(1.0-x)+y*y/d/d);\n}\n\nfloat dilate_distance_manhattan(float x, float y, float d) {\n\treturn 1.0-(abs(1.0-x)+abs(y)/d);\n}\n\nfloat dilate_distance_chebyshev(float x, float y, float d) {\n\treturn 1.0-max(abs(1.0-x), abs(y)/d);\n}\n\n",
				"includes": [
					"pack_1x32_to_2x16"
				],
				"inputs": [
					{
						"default": "vec3(0.0)",
						"function": true,
						"label": "",
						"name": "in",
						"type": "rgba"
					}
				],
				"instance": "vec3 $(name)_distance_v(vec2 uv) {\n\tvec2 e = vec2(0.0, 1.0/$s);\n\tint steps = int($s*$d);\n\tvec3 p = vec3(pack_4x16_to_2x32($in(uv)), uv.y);\n\tfor (int i = 0; i < steps; ++i) {\n\t\tvec2 dx = float(i)*e;\n\t\tvec3 p2 = vec3(pack_4x16_to_2x32($in(uv+dx)), (uv+dx).y);\n\t\tif (p2.x > p.x) {\n\t\t\tp2.x = dilate_distance_$distance(p2.x, dx.y, $d);\n\t\t\tp = mix(p, p2, step(p.x, p2.x));\n\t\t}\n\t\tp2 = vec3(pack_4x16_to_2x32($in(uv-dx)), (uv-dx).y);\n\t\tif (p2.x > p.x) {\n\t\t\tp2.x = dilate_distance_$distance(p2.x, dx.y, $d);\n\t\t\tp = mix(p, p2, step(p.x, p2.x));\n\t\t}\n\t}\n\treturn p;\n}\n",
				"name": "Dilate pass 2",
				"outputs": [
					{
						"rgb": "$(name)_distance_v($uv)",
						"type": "rgb"
					}
				],
				"parameters": [
					{
						"default": 9,
						"first": 6,
						"label": "",
						"last": 12,
						"name": "s",
						"type": "size"
					},
					{
						"control": "None",
						"default": 0.5,
						"label": "",
						"max": 1,
						"min": 0,
						"name": "d",
						"step": 0.01,
						"type": "float"
					},
					{
						"default": 2,
						"label": "",
						"name": "distance",
						"type": "enum",
						"values": [
							{
								"name": "Euclidian",
								"value": "euclidian"
							},
							{
								"name": "Manhattan",
								"value": "manhattan"
							},
							{
								"name": "Chebyshev",
								"value": "chebyshev"
							}
						]
					}
				]
			},
			"type": "shader"
		},
		{
			"name": "dilate_pass_1",
			"node_position": {
				"x": 176.313049,
				"y": -231.32901
			},
			"parameters": {
				"d": 1,
				"s": 11
			},
			"seed": 71939,
			"seed_locked": true,
			"shader_model": {
				"code": "",
				"global": "",
				"includes": [
					"pack_1x32_to_2x16"
				],
				"inputs": [
					{
						"default": "0.0",
						"function": true,
						"label": "",
						"name": "in",
						"type": "f"
					}
				],
				"instance": "vec3 $(name)_distance_h(vec2 uv) {\n\tvec2 e = vec2(1.0/$s, 0.0);\n\tint steps = int($s*$d);\n\tfloat rv = 0.0;\n\tvec2 source_uv;\n\tfor (int i = 0; i < steps; ++i) {\n\t\tsource_uv = uv+float(i)*e;\n\t\tif ($in(source_uv) > 0.5) {\n\t\t\trv = 1.0-float(i)*e.x/$d;\n\t\t\tbreak;\n\t\t}\n\t\tsource_uv = uv-float(i)*e;\n\t\tif ($in(source_uv) > 0.5) {\n\t\t\trv = 1.0-float(i)*e.x/$d;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn vec3(rv, source_uv);\n}\n",
				"name": "Dilate pass 1",
				"outputs": [
					{
						"rgba": "pack_2x32_to_4x16($(name)_distance_h($uv).xy)",
						"type": "rgba"
					}
				],
				"parameters": [
					{
						"default": 9,
						"first": 6,
						"label": "",
						"last": 12,
						"name": "s",
						"type": "size"
					},
					{
						"control": "None",
						"default": 0.5,
						"label": "",
						"max": 1,
						"min": 0,
						"name": "d",
						"step": 0.01,
						"type": "float"
					}
				]
			},
			"type": "shader"
		},
		{
			"name": "shader_1",
			"node_position": {
				"x": 181.692261,
				"y": -318.035889
			},
			"parameters": {

			},
			"seed": 0,
			"seed_locked": false,
			"shader_model": {
				"code": "",
				"global": "",
				"inputs": [
					{
						"default": "vec4(0.0)",
						"label": "",
						"name": "in",
						"type": "rgba"
					}
				],
				"instance": "",
				"name": "",
				"outputs": [
					{
						"f": "sign(dot($in($uv), vec4(1.0)))",
						"type": "f"
					}
				],
				"parameters": [

				]
			},
			"type": "shader"
		},
		{
			"name": "switch",
			"node_position": {
				"x": 428.282593,
				"y": -418.594482
			},
			"parameters": {
				"choices": 2,
				"outputs": 1,
				"source": 0
			},
			"seed": 0,
			"seed_locked": false,
			"type": "switch"
		},
		{
			"name": "buffer",
			"node_position": {
				"x": 158.282593,
				"y": -146.594482
			},
			"parameters": {
				"filter": false,
				"mipmap": false,
				"size": 11
			},
			"seed": 0,
			"seed_locked": false,
			"type": "buffer",
			"version": 2
		}
	],
	"parameters": {
		"param0": 8,
		"param1": 10,
		"param2": 0
	},
	"seed": 0,
	"seed_locked": false,
	"shortdesc": "Fill",
	"type": "graph"
}