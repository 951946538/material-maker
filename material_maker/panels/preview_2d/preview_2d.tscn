[gd_scene load_steps=4 format=3 uid="uid://bb6iar0tbj2qt"]

[ext_resource type="Script" path="res://material_maker/panels/preview_2d/preview_2d.gd" id="1"]

[sub_resource type="Shader" id="1"]
resource_local_to_scene = true

[sub_resource type="ShaderMaterial" id="2"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("1")

[node name="Preview2D" type="ColorRect" groups=["preview"]]
material = SubResource("2")
clip_contents = true
custom_minimum_size = Vector2(64, 64)
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_right = -695.0
offset_bottom = -228.0
size_flags_horizontal = 0
size_flags_vertical = 8
mouse_filter = 1
script = ExtResource("1")
shader = "uniform vec2 preview_2d_size;

void fragment() {
	float ms = max(preview_2d_size.x, preview_2d_size.y);
	vec2 uv = fract(0.5+1.2*(UV-vec2(0.5))*ms/preview_2d_size.yx);
	float is = min(preview_2d_size.x, preview_2d_size.y)/1.2;
	vec2 m2 = min(fract(uv), 1.0-fract(uv));
	vec4 image = preview_2d(uv);
	vec3 image_with_background = mix(vec3(mod(floor(uv.x*32.0)+floor(uv.y*32.0), 2.0)), image.xyz, image.a);
	float lines_color = 0.5*(cos(5.0*TIME+100.0*(uv.x+uv.y))+1.0);
	COLOR = vec4(mix(image_with_background, vec3(lines_color), step(is*min(m2.x, m2.y), 1.0)), 1.0);
}"

[connection signal="resized" from="." to="." method="on_resized"]
[connection signal="visibility_changed" from="." to="." method="_on_Preview2D_visibility_changed"]
