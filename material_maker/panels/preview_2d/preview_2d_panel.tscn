[gd_scene load_steps=12 format=2]

[ext_resource path="res://material_maker/icons/icons.tres" type="Texture" id=1]
[ext_resource path="res://material_maker/panels/preview_2d/control_point.tscn" type="PackedScene" id=2]
[ext_resource path="res://material_maker/panels/preview_2d/preview_2d.tscn" type="PackedScene" id=3]
[ext_resource path="res://material_maker/panels/preview_2d/preview_2d_panel.gd" type="Script" id=4]
[ext_resource path="res://material_maker/panels/preview_2d/lines.gd" type="Script" id=5]

[sub_resource type="Shader" id=1]
resource_local_to_scene = true
code = "shader_type canvas_item;

void fragment() {
	COLOR = vec4(0.0, 0.0, 0.0, 1.0);
}
"

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = SubResource( 1 )

[sub_resource type="AtlasTexture" id=3]
flags = 4
atlas = ExtResource( 1 )
region = Rect2( 64, 48, 32, 32 )

[sub_resource type="AtlasTexture" id=4]
flags = 4
atlas = ExtResource( 1 )
region = Rect2( 16, 64, 16, 16 )

[sub_resource type="Shader" id=5]
resource_local_to_scene = true

[sub_resource type="ShaderMaterial" id=6]
resource_local_to_scene = true
shader = SubResource( 5 )

[node name="Preview2D" instance=ExtResource( 3 )]
material = SubResource( 2 )
margin_right = -758.0
margin_bottom = -267.0
rect_min_size = Vector2( 200, 200 )
script = ExtResource( 4 )
shader = "uniform vec2 preview_2d_size = vec2(100.0);
uniform float preview_2d_scale = 1.2;
uniform vec2 preview_2d_center = vec2(0.5);

void fragment() {
	vec2 ratio = preview_2d_size;
	vec2 uv = preview_2d_center+(UV-0.5)*preview_2d_scale*ratio/min(ratio.x, ratio.y);
	vec4 image = preview_2d(uv);
	float checkerboard = mod(floor(uv.x*32.0)+floor(uv.y*32.0), 2.0);
	vec3 image_with_background = mix(vec3(checkerboard), image.xyz, image.a);
	COLOR = vec4(image_with_background, 1.0);
}
"
shader_accumulate = "uniform sampler2D sum;
uniform bool clear = false;
uniform vec2 preview_2d_size = vec2(100.0);
uniform float preview_2d_scale = 1.2;
uniform vec2 preview_2d_center = vec2(0.5);

//Adapted from https://www.reedbeta.com/blog/hash-functions-for-gpu-rendering/
uint viewport_rand_pcg(inout uint seed){
    uint state = seed;
    seed = seed * uint(747796405) + uint(2891336453);
    uint word= ((state >> ((state >> uint(28) ) + uint(4) )) ^ state) * uint(277803737);
    return (word >> uint(22) ) ^ word;
}

float viewport_RandomFloat01(inout uint state){
    uint r=viewport_rand_pcg(state);
    r &= uint(0x007FFFFF);
    r |= uint(0x3F800000);
    return uintBitsToFloat(r) - 1.0f;
}

void fragment() {
	vec2 dxy = vec2(dFdx(UV.x), dFdy(UV.y));
	vec2 exactXY = UV/dxy;
	//Adapted from https://www.shadertoy.com/view/tsBBWW by demofox
	uint rngState = uint(uint(exactXY.x) * uint(1973) + uint(exactXY.y) * uint(9277) + uint(TIME*1000.0) * uint(26699)) | uint(1);
	vec2 rxy = vec2(viewport_RandomFloat01(rngState), viewport_RandomFloat01(rngState)) * dxy-dxy/2.0;
	vec2 ratio = preview_2d_size;
	vec2 uv = preview_2d_center+(UV+rxy-0.5)*preview_2d_scale*ratio/min(ratio.x, ratio.y);
	if (clear) {
		COLOR = preview_2d(uv);
	} else {
		COLOR = textureLod(sum, UV, 0.0)+preview_2d(uv);
	}
}
"
shader_divide = "shader_type canvas_item;

uniform sampler2D sum;
uniform int divide = 1;

void fragment() {
	COLOR = vec4(texture(sum, UV).rgb/float(divide), 1.0);
}"

[node name="Axes" type="Control" parent="." index="0"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
script = ExtResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="P1" parent="." index="1" instance=ExtResource( 2 )]
visible = false
self_modulate = Color( 1, 0.466667, 0, 1 )
margin_left = 5.0
margin_top = 29.0
margin_right = 37.0
margin_bottom = 61.0
texture = SubResource( 3 )

[node name="P2" parent="." index="2" instance=ExtResource( 2 )]
visible = false
self_modulate = Color( 0, 0.505882, 1, 1 )
margin_left = 5.0
margin_top = 29.0
margin_right = 37.0
margin_bottom = 61.0
texture = SubResource( 3 )

[node name="P3" parent="." index="3" instance=ExtResource( 2 )]
visible = false
self_modulate = Color( 0, 1, 0.380392, 1 )
margin_left = 5.0
margin_top = 29.0
margin_right = 37.0
margin_bottom = 61.0
texture = SubResource( 4 )

[node name="Rect1" parent="." index="4" instance=ExtResource( 2 )]
visible = false
self_modulate = Color( 1, 0.631373, 0, 1 )
margin_left = 5.0
margin_top = 29.0
margin_right = 21.0
margin_bottom = 45.0
texture = SubResource( 4 )
parent_control = "P1"
control_type = 1

[node name="Radius1" parent="." index="5" instance=ExtResource( 2 )]
visible = false
self_modulate = Color( 1, 0.631373, 0, 1 )
margin_left = 5.0
margin_top = 29.0
margin_right = 21.0
margin_bottom = 45.0
mouse_default_cursor_shape = 10
texture = SubResource( 4 )
parent_control = "P1"
control_type = 2

[node name="Radius11" parent="." index="6" instance=ExtResource( 2 )]
visible = false
self_modulate = Color( 1, 0.631373, 0, 1 )
margin_left = 5.0
margin_top = 29.0
margin_right = 21.0
margin_bottom = 45.0
mouse_default_cursor_shape = 10
texture = SubResource( 4 )
parent_control = "Radius1"
control_type = 2

[node name="Scale1" parent="." index="7" instance=ExtResource( 2 )]
visible = false
self_modulate = Color( 1, 0.631373, 0, 1 )
margin_left = 5.0
margin_top = 29.0
margin_right = 21.0
margin_bottom = 45.0
mouse_default_cursor_shape = 10
texture = SubResource( 4 )
parent_control = "P1"
control_type = 3

[node name="Angle1" parent="." index="8" instance=ExtResource( 2 )]
visible = false
self_modulate = Color( 1, 0.631373, 0, 1 )
margin_left = 5.0
margin_top = 29.0
margin_right = 21.0
margin_bottom = 45.0
mouse_default_cursor_shape = 10
texture = SubResource( 4 )
parent_control = "P1"
control_type = 2

[node name="Angle2" parent="." index="9" instance=ExtResource( 2 )]
visible = false
self_modulate = Color( 1, 0.631373, 0, 1 )
margin_left = 5.0
margin_top = 29.0
margin_right = 21.0
margin_bottom = 45.0
mouse_default_cursor_shape = 10
texture = SubResource( 4 )
parent_control = "P1"
control_type = 2

[node name="ContextMenu" type="PopupMenu" parent="." index="10"]
margin_right = 109.0
margin_bottom = 52.0
items = [ "Reset view", null, 0, false, false, 0, 0, null, "", false ]

[node name="Axes" type="PopupMenu" parent="ContextMenu" index="1"]
margin_right = 91.0
margin_bottom = 88.0

[node name="Export" type="PopupMenu" parent="ContextMenu" index="2"]
margin_right = 91.0
margin_bottom = 88.0

[node name="Reference" type="PopupMenu" parent="ContextMenu" index="3"]
margin_right = 91.0
margin_bottom = 88.0

[node name="Accumulate" type="Viewport" parent="." index="11"]
size = Vector2( 2, 2 )
handle_input_locally = false
disable_3d = true
keep_3d_linear = true
render_target_v_flip = true
render_target_clear_mode = 1
render_target_update_mode = 1
gui_snap_controls_to_pixels = false

[node name="Iteration" type="ColorRect" parent="Accumulate" index="0"]
material = SubResource( 6 )
margin_right = 40.0
margin_bottom = 40.0

[connection signal="gui_input" from="." to="." method="_on_gui_input"]
[connection signal="id_pressed" from="ContextMenu" to="." method="_on_ContextMenu_id_pressed"]
[connection signal="id_pressed" from="ContextMenu/Axes" to="." method="_on_Axes_id_pressed"]
[connection signal="id_pressed" from="ContextMenu/Export" to="." method="_on_Export_id_pressed"]
[connection signal="id_pressed" from="ContextMenu/Reference" to="." method="_on_Reference_id_pressed"]
